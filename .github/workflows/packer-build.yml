name: Build and Deploy Application

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Build Application Artifact
        run: |
          npm run build
          zip -r application.zip .
      - name: Check contents of application.zip (file names only)
        run: |
          unzip -l application.zip | awk '{print $4}' | tail -n +4 | head -n -2
      - name: Verify Artifact
        run: |
          if [ ! -f ./application.zip ]; then
            echo "Error: application.zip not found!"
            exit 1
          fi
      - name: List Directory Contents
        run: ls -la

      - name: Configure AWS credentials for Dev Account
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: Install Packer
        uses: hashicorp/setup-packer@v2
        with:
          packer_version: latest

      - name: Create Packer variables file
        run: |
          echo 'artifact_path = "application.zip"' > variables.pkrvars.hcl

      - name: Build Custom Packer Image
        id: build-ami
        run: |
          packer init .
          AMI_ID=$(packer build -var-file=variables.pkrvars.hcl -machine-readable ./webapp-ami.pkr.hcl | grep 'artifact,0,id' | cut -d, -f6)
          echo "AMI_ID=$AMI_ID"
          echo "AMI_ID=$AMI_ID" >> $GITHUB_ENV

      - name: Share AMI with Demo Account
        run: |
          aws ec2 modify-image-attribute --image-id ${{ env.AMI_ID }} --launch-permission "Add=[{UserId=${{ secrets.DEMO_ACCOUNT_ID }}]"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"
